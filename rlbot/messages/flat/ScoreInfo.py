# automatically generated by the FlatBuffers compiler, do not modify

# namespace: flat

import flatbuffers

class ScoreInfo(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAsScoreInfo(cls, buf, offset):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = ScoreInfo()
        x.Init(buf, n + offset)
        return x

    # ScoreInfo
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # ScoreInfo
    def Score(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # ScoreInfo
    def Goals(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # ScoreInfo
    def OwnGoals(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # ScoreInfo
    def Assists(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # ScoreInfo
    def Saves(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # ScoreInfo
    def Shots(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(14))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # ScoreInfo
    def Demolitions(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(16))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

def ScoreInfoStart(builder): builder.StartObject(7)
def ScoreInfoAddScore(builder, score): builder.PrependInt32Slot(0, score, 0)
def ScoreInfoAddGoals(builder, goals): builder.PrependInt32Slot(1, goals, 0)
def ScoreInfoAddOwnGoals(builder, ownGoals): builder.PrependInt32Slot(2, ownGoals, 0)
def ScoreInfoAddAssists(builder, assists): builder.PrependInt32Slot(3, assists, 0)
def ScoreInfoAddSaves(builder, saves): builder.PrependInt32Slot(4, saves, 0)
def ScoreInfoAddShots(builder, shots): builder.PrependInt32Slot(5, shots, 0)
def ScoreInfoAddDemolitions(builder, demolitions): builder.PrependInt32Slot(6, demolitions, 0)
def ScoreInfoEnd(builder): return builder.EndObject()
