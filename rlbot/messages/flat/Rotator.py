# automatically generated by the FlatBuffers compiler, do not modify

# namespace: flat

import flatbuffers

# /// Expresses the rotation state of an object in Euler angles, with values in radians.
class Rotator(object):
    __slots__ = ['_tab']

    # Rotator
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # Rotator
    def Pitch(self): return self._tab.Get(flatbuffers.number_types.Float32Flags, self._tab.Pos + flatbuffers.number_types.UOffsetTFlags.py_type(0))
    # Rotator
    def Yaw(self): return self._tab.Get(flatbuffers.number_types.Float32Flags, self._tab.Pos + flatbuffers.number_types.UOffsetTFlags.py_type(4))
    # Rotator
    def Roll(self): return self._tab.Get(flatbuffers.number_types.Float32Flags, self._tab.Pos + flatbuffers.number_types.UOffsetTFlags.py_type(8))

def CreateRotator(builder, pitch, yaw, roll):
    builder.Prep(4, 12)
    builder.PrependFloat32(roll)
    builder.PrependFloat32(yaw)
    builder.PrependFloat32(pitch)
    return builder.Offset()
